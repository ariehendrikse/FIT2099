Beating Up Zombies:
The Zombie class will be given a new private attribute of type ArrayList<Limb>, which will contain instances of new "Arm" & "Leg" classes, which will extend a new abstract class called Limbs. The new Limbs class will extend WeaponItem. 

I chose to create the new class "Limb" to represent any type of limb, and to implement any shared functionality of all limbs, to reduce repetition in the code. As limbs should be able to be used as weapons once dropped, the Limb class extends the existing class WeaponItem, to allow the limbs to work with the existing weapon system. These limbs can not however, be used as weapons until dropped, as they will be in the zombie's list "Limbs" and not "Inventory". 

As arms and legs are different (and have different consequences to the actor when lost), I chose to create the two new classes Arm and Leg, which both extend Limb. This way the two types of limb can be unique but also share some common functionality.

A GameMap attribute will also be added to Zombie to allow them to drop Arms, Legs and Weapons on the map in adjacent locations. Also a custom private drop method will be added to Zombie, as if we were to use Item's getDropAction, they would drop where the zombie is standing and it would pick it up straight away.

The Zombie class will overide the Actor class's hurt() method. This is to allow the Zombie class to act uniquely when attacked. The new hurt() will do the same as the original (resuce the zombie's health) and have a 25% chance of calling the new method "knockOffLimb()" which will be a private method in the Zombie class.

If called, knockOffLimb() will check if there are still limbs on the zombie and if there is, will remove one at random and drop it on the ground at a random adjacent location to the zombie. A message will be displayed (such as "The zombie's leg flung off") to tell the player. As they are WeaponItem objects, the dropped limbs can then be picked up and used as weapons.

Whenever a zombie's getIntrinsicWeapon() is called, it will check how many arms are left in the Limbs array and multiply 25% by the number of arms. This will result in a 50%, 25% and 0% chance of punching if there are 2, 1, and 0 arms respectively. In getWeapon, after chosing the attack, it will also drop any weapon if number of arms is 0, and have a 50% chance of dropping its weapon if number of arms is 1. The weapon will be removed from the inventory using removeItemFromInventory and dropped to an adjacent location using Location's addItem() and getExits().

A new public method will be added to the Zombie class called "canMove". This will determine if the actor should be able to move on a given turn, which depends on its leg count. 

In the Hunt and Wander behaviours, I will call this new method (which returns a boolean) before generating any actions.