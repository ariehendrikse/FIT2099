Mambo Marie:

As Mambo Marie is a new person in the game, she will need to be an instance of Actor. We decided that she is too different to both humans and zombies to be a sub class of one of those, so Mambo Marie will be a new class that will extend ZombieActor.

Mambo Marie has 4 main responsibilities: Appear, Disappear, Wander and Chant (spawn zombies). In the game, actor's responsiblilites are represented by actions and behaviours. We will use actions and behaviours to model Mambo Marie's responsibilities instead of hardcoding all the responsiblilites into a long and complicated playTurn method in the MamboMarie class. This also reduces the Mambo Marie class's dependencies and allows us to reuse existing code.

To achieve the wander responsibility, we will resuse the existing WanderBehaviour class. This behaviour will work as is and not require any changes.

To achieve the chant/spawn zombies requirement, a new class will be created called ChantSpawnAction. This class will extend the Action class. It's execute method will create 5 new Zombie instances and for each one of them, choose a random location on its GameMap parameter. If the new zombie can enter the randomly chosen location it will be placed there. If it cant, a new random location will be chosen. This will continue for a set number of tries, and then give up after a while, as the map is likely full. The menu description for this action will be something like "<actor> chanted and spawned <number_of_new_zombies> new zombies".

The appear and disappear responsibilities will be met by using the existing MoveActorAction class to move Mambo Marie to and from a void-like location. This void-like location will be the only location on a new additional GameMap created solely for storing Mambo Marie while she is not on the main map. This addition GameMap will be created and added in the same way as the town game map (in the application class). 
The reason we will create a new map and put Mambo Marie there is so that mambo marie can still have her turn even when she is not on the main map (her turn while she is in the void will either be do nothing, or, 5% of the time, move to the main map), and so that her object isn't deleted from memory (which would mean her current health level would be forgotten and there would be no way of knowing if she had been killed yet, for ending the game). Another way around this problem is to remove Mambo Marie from the world and store details about her health and if she has been killed somewhere else, but this responsibility doesn't really fit with any of the existing classes, so would require adding dependencies and increasing encapsulation boundaries, which should be avoided. 
It would also require making some other class bring Mambo Marie back 5% of the time, which is really Mambo Marie's responsibility, not another class's. 

Our implementation will also allow us to check if Mambo Marie is alive in the same way we check if any other actor is alive (by scanning ActorLocations, which wouldn't work if Mambo Marie was completely removed from the world between her appearances), instead of adding a custom, hardcoded check which checks a stillAlive variable in some other class, which would require adding dependencies or overriding the run() method in the engine's World class.

So, Mambo Marie will store, as private attributes, the void location and her main map spawn location. When she should move to the main map, her play turn method will return a MoveActorAction with the destination set to her main map spawn location. When its time to go back to the void, her playTurn method will return a MoveActorAction with the destination set to the void location.

With this, all her responsibilities are implemented, however, we will also create a new class called DoNothingCustomMessageAction which will extend DoNothingAction. This new action is basically a do nothing action but it lets you pass a custom action message for displaying to the player, instead of just "<actor> does nothing". This will be dine by overriding DoNothingAction's menuDescription method to return whatever message is passed into DoNothingCustomMessageAction's constuctor. 

We will use this new action to display "Mambo Marie sits in her void" instead of "Mambo Marie does nothing" when Mambo Marie is doing nothing in the void, as this makes it clearer to the player that Mambo Marie isn't present at the moment, is in her void. We could have just made it so that no message is displayed about Mambo Marie when she is in her void, but we think there should be a message as a reminder to the player that Mambo Marie is still alive.

All the logic for counting turns and deciding which action to do on each turn will be encapsulated inside the Mambo Marie class. At the start of each turn (when her playTurn is called), Mambo Marie will check if she is in the void (using the comparison: voidLocation.getActor() == this) and will have a 5% chance of moving to the main map if she is in the void (using a MoveActorAction). Mambo Marie will have a private turn counter attribute which will be incremented on each turn she is in the main map and reset every time she reappears. If she isn't in the void and if the counter modulo 10 equals 0, then she will chant and spawn zombies, but if the counter equals 30 she will move back to the void instead (with another MoveActorAction), and if she doesn't do either of these things and isn't in the void, she will use WanderBehaviour to generate a MoveActorAction to wander around the main map.

The Application class will be modified to create Mambo Marie and her void, and will place her in the void map when the game initalises.