Crafting Weapons:
A new class called CraftAction (which extends Action) will be created, which, given an craftable weapon and a reference to an actor, stores an action to craft it into a new item and put it in the actor's inventory, and remove the old item. It is responsible for holding all the crafting recipies (i.e. it knows ZombieArm should be turned into a ZombieClub)

I chose to create a new class and to make it extend Action to accomplish the crafting mechanics, because the game already has an existing system for respresenting actions (things that can happen in the game) and already allows the player to choose these actions. As "crafting" is something that can happen (an action), and the player needs to be able to select this action, it makes sense to create a new Action subclass.

Doing it this way also makes it easy to add further crafting functionality and to add new craftable items to the game.

To add this new CraftAction option to an actor's allowable actions, all craftable items will implement a new interface called Craftable. Craftable will have an interface method called addCraftAction, which will be implemented in all objects that implement it, to create the item's CraftAction and add it to the item's allowableActions attribute (as Limb is a subclass of Item, it has this attribute). This attribute is scanned on every turn and so will automatically appear in the menu for the player to choose if they are holding a craftable item. 

In the case of limbs, upon executing the CraftAction, the limb will be removed from the actor's inventory and a new ZombieMace or ZombieClub object will be added, which will be two new subclasses of WeaponItem.

By making these new weapons (ZombieMace and ZombieClub) into new classes that extend WeaponItem, they will get the game's weapon functionality and will be able to be used as weapons by an actor.