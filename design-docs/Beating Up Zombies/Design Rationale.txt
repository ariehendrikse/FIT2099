Beating Up Zombies:
The ZombieActor class will be given a new attribute of type ArrayList<Limb>, which will contain instances of new "Arm" & "Leg" classes, which will extend a new abstract class called Limbs. The new Limbs class will extend WeaponItem. 

I chose to create the new class "Limb" to represent any type of limb, and to implement any shared functionality of all limbs, to reduce repetition in the code. As limbs should be able to be used as weapons once dropped, the Limb class extends the existing class WeaponItem, to allow the limbs to work with the existing weapon system. These limbs can not however, be used as weapons until dropped, as they will be in the actor's list "Limbs" and not "Inventory". 

As arms and legs are different (and have different consequences to the actor when lost), I chose to create the two new classes Arm and Leg, which both extend Limb. This way the two types of limb can be unique but also share some common functionality.

A GameMap attribute will also be added to Zombie to allow them to drop Arms, Legs and Weapons on the map. 

The Zombie class will overide the Actor class's hurt() method. This is to allow the Zombie class to act uniquely when attacked. The new hurt() will do the same as the original (resuce the zombie's health) and have a 25% chance of calling the new method "knockOffLimb()" which will be a private method in the Zombie class.

If called, knockOffLimb() will check if there are still limbs on the zombie and if there is, will remove one at random and drop it on the ground at a random adjacent location to the zombie. A message will be displayed (such as "The zombie's leg flung off") to tell the player. As they are WeaponItem objects, the dropped limbs can then be picked up and used as weapons.

Whenever a zombie's getWeapon() is called, it will check how many arms are left in the Limbs array and multiply 25% by the number of arms. This will result in a 50%, 25% and 0% chance of of using the normal attack (use weapon, and if not available, punch) if there are 2, 1, and 0 arms respectively. After chosing the attack, it will also drop any weapon if number of arms is 0, and have a 50% chance of dropping its weapon if number of arms is 1. The weapon will be removed from the inventory using removeItemFromInventory and dropped on the ground using Location's addItem().

A new private boolean attribute will be added to the zombie class called "canMoveThisTurn". Getters and setters will be made for this attribute. I will use this attribute to determine if the zombie should be able to move on a given turn.

A getter will also be made for getting the number of legs on the zombie so that the hunt and wander behaviour classes (the two classes that create MoveActorActions for zombies) can check the number of legs on its actor parameter before moving it. 

If the number of legs is 1 and the canMoveThisTurn attribute is true, the zombie can move and canMoveThisTurn will be set to false. On the other hand, if canMoveThisTurn is false at the start of the turn, the zombie will not move that turn and will set canMoveThisTurn to true. 

If the zombie has no legs, canMoveThisTurn is disregarded, and the zombie will not move.